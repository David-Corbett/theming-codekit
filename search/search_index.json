{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Theming codekit This repository provides a series of tools and build scripts useful for developing resources that would be used to theme web content: write and compile scss to css apply appropriate prefixing for css rules write and uglify js detect features the user\u2019s browser has to offer (via Modernizr) code linting optimise and compress images for the web living style guide for the code via kss The kit uses NPM scripts and packages to create tooling to perform all of the above. Comprehensive documentation is provided herein on how to use the toolkit and how to configure additional applications should they be needed. The documentation is also online at https://david-corbett.github.io/theming-codekit/ .","title":"Home"},{"location":"#theming-codekit","text":"This repository provides a series of tools and build scripts useful for developing resources that would be used to theme web content: write and compile scss to css apply appropriate prefixing for css rules write and uglify js detect features the user\u2019s browser has to offer (via Modernizr) code linting optimise and compress images for the web living style guide for the code via kss The kit uses NPM scripts and packages to create tooling to perform all of the above. Comprehensive documentation is provided herein on how to use the toolkit and how to configure additional applications should they be needed. The documentation is also online at https://david-corbett.github.io/theming-codekit/ .","title":"Theming codekit"},{"location":"documentation/documentation-overview/","text":"Documentation Local documentation Running our documentation locally requires the use of mkdocs .","title":"Documentation"},{"location":"documentation/documentation-overview/#documentation","text":"","title":"Documentation"},{"location":"documentation/documentation-overview/#local-documentation","text":"Running our documentation locally requires the use of mkdocs .","title":"Local documentation"},{"location":"documentation/kss/","text":"KSS","title":"KSS"},{"location":"documentation/kss/#kss","text":"","title":"KSS"},{"location":"documentation/mkdocs/","text":"mkdocs","title":"mkdocs"},{"location":"documentation/mkdocs/#mkdocs","text":"","title":"mkdocs"},{"location":"getting-started/build-tools/","text":"Build Tools Installation The codekit uses NPM scripts and packages to create tooling that a developer would ideally like to have for theming web content. Therefore to get started, the developer must have NPM installed on their machine. To see if you already have Node.js and npm installed, check the installed version, run the following commands in a terminal window: node -v npm -v Both commands should return a version number similar to v10.x.x or 6.x.x (where x is a valid integer). More information on installing NPM on various platforms and devices is available on the NPM website . When you are sure that Node.js and npm are installed on the machine, open a terminal and navigate to the root directory of the project where the package.json file is located and run npm install to install our local dependencies listed in package.json . Tooling setup With the codekit using NPM scripts for its build system, the package.json includes convenient methods for working with the framework, including compiling code, running tests, and more. Using NPM scripts The package.json includes the following commands and tasks: Task Description npm run build npm run build compiles files into their build directories ready for use in a production environment. Uses Sass , Autoprefixer , and UglifyJS . npm run watch Watches for changes to scss and js files compiles them for development purposes. Run npm run to see all the npm scripts. Troubleshooting Should you encounter problems with installing dependencies, uninstall all previous dependency versions (global and local). Then, rerun npm install .","title":"Build tools"},{"location":"getting-started/build-tools/#build-tools","text":"","title":"Build Tools"},{"location":"getting-started/build-tools/#installation","text":"The codekit uses NPM scripts and packages to create tooling that a developer would ideally like to have for theming web content. Therefore to get started, the developer must have NPM installed on their machine. To see if you already have Node.js and npm installed, check the installed version, run the following commands in a terminal window: node -v npm -v Both commands should return a version number similar to v10.x.x or 6.x.x (where x is a valid integer). More information on installing NPM on various platforms and devices is available on the NPM website . When you are sure that Node.js and npm are installed on the machine, open a terminal and navigate to the root directory of the project where the package.json file is located and run npm install to install our local dependencies listed in package.json .","title":"Installation"},{"location":"getting-started/build-tools/#tooling-setup","text":"With the codekit using NPM scripts for its build system, the package.json includes convenient methods for working with the framework, including compiling code, running tests, and more.","title":"Tooling setup"},{"location":"getting-started/build-tools/#using-npm-scripts","text":"The package.json includes the following commands and tasks: Task Description npm run build npm run build compiles files into their build directories ready for use in a production environment. Uses Sass , Autoprefixer , and UglifyJS . npm run watch Watches for changes to scss and js files compiles them for development purposes. Run npm run to see all the npm scripts.","title":"Using NPM scripts"},{"location":"getting-started/build-tools/#troubleshooting","text":"Should you encounter problems with installing dependencies, uninstall all previous dependency versions (global and local). Then, rerun npm install .","title":"Troubleshooting"},{"location":"scss/layout/","text":"Layout","title":"layout"},{"location":"scss/layout/#layout","text":"","title":"Layout"},{"location":"scss/scss-introduction/","text":"Introduction Autoprefixer The codekit uses Autoprefixer (included in the build process) to automatically add vendor prefixes to some CSS properties at build time. Doing so saves time and code by allowing us to write key parts of our CSS a single time while eliminating the need for vendor mixins. We maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository. See package.json for details.","title":"scss introduction"},{"location":"scss/scss-introduction/#introduction","text":"","title":"Introduction"},{"location":"scss/scss-introduction/#autoprefixer","text":"The codekit uses Autoprefixer (included in the build process) to automatically add vendor prefixes to some CSS properties at build time. Doing so saves time and code by allowing us to write key parts of our CSS a single time while eliminating the need for vendor mixins. We maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository. See package.json for details.","title":"Autoprefixer"}]}